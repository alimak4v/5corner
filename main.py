from telethon.sync import TelegramClient
from telethon.tl.types import PeerChannel
from openai import OpenAI
import time
import json
import os
import datetime
from dotenv import load_dotenv
import pytz

# === –ó–∞–≥—Ä—É–∑–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –∏–∑ .env ===
load_dotenv()

# === –ù–∞—Å—Ç—Ä–æ–π–∫–∏ ===
PROCESSED_MESSAGES_FILE = "processed_messages.json"
NEWS_CACHE_FILE = "news_cache.json"
POSTING_TIMES = ["00:00"]
# @test_news5          @cho_tam_official
TARGET_CHANNEL = "@cho_tam_official"
BACKING_IMAGE = "backing.png"  # –ü—É—Ç—å –∫ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—é –¥–ª—è –ø—Ä–∏–∫—Ä–µ–ø–ª–µ–Ω–∏—è

# === –ù–∞—Å—Ç—Ä–æ–π–∫–∏ Telegram –∫–ª–∏–µ–Ω—Ç–∞ ===
api_id = os.getenv("API_ID")
api_hash = os.getenv("API_HASH")
phone = os.getenv("PHONE")
client_tg = TelegramClient(phone, api_id, api_hash)
client_tg.start()

# === –°–ø–∏—Å–æ–∫ –∫–∞–Ω–∞–ª–æ–≤ –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è ===
channel_usernames = ['@fsprussia',
                     '@truetechcommunity',
                     '@phystechunion',
                     '@stfpmi',
                     '@partynewpeople',
                     '@rucodefestival',
                     '@rozetked',
                     '@roscosmos_gk',
                     '@miptru',
                     '@mephi_of',
                     '@naukamsu',
                     '@skolkovolive',
                     '@bmstu1830',
                     '@thecodemedia',
                     '@t_central_university',
                     '@techno_yandex',
                     '@habr_com',
                     '@rosatomru',
                     '@fpmi_students',
                     '@innopolistg',
                     '@vkjobs',
                     '@tb_invest_official']

# === –ù–∞—Å—Ç—Ä–æ–π–∫–∏ OpenAI / OpenRouter ===
# –ò–°–ü–†–ê–í–õ–ï–ù–û: —É–±—Ä–∞–Ω—ã –ª–∏—à–Ω–∏–µ –ø—Ä–æ–±–µ–ª—ã –≤ URL
client_ai = OpenAI(
    base_url="https://openrouter.ai/api/v1",
    api_key=os.getenv("OPENROUTER_API_KEY")
)


# === –§—É–Ω–∫—Ü–∏–∏ —Ä–∞–±–æ—Ç—ã —Å –¥–∞–Ω–Ω—ã–º–∏ ===
def load_processed_ids():
    """–ó–∞–≥—Ä—É–∂–∞–µ—Ç ID –æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π"""
    if os.path.exists(PROCESSED_MESSAGES_FILE):
        try:
            with open(PROCESSED_MESSAGES_FILE, "r", encoding="utf-8") as f:
                return set(json.load(f))
        except:
            return set()
    return set()


def save_processed_ids(ids):
    """–°–æ—Ö—Ä–∞–Ω—è–µ—Ç ID –æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π"""
    with open(PROCESSED_MESSAGES_FILE, "w", encoding="utf-8") as f:
        json.dump(list(ids), f, indent=2)


def load_news_cache():
    """–ó–∞–≥—Ä—É–∂–∞–µ—Ç –Ω–∞–∫–æ–ø–ª–µ–Ω–Ω—ã–µ –Ω–æ–≤–æ—Å—Ç–∏ –∏–∑ –∫—ç—à–∞"""
    if os.path.exists(NEWS_CACHE_FILE):
        try:
            with open(NEWS_CACHE_FILE, "r", encoding="utf-8") as f:
                return json.load(f)
        except:
            return []
    return []


def save_news_cache(news):
    """–°–æ—Ö—Ä–∞–Ω—è–µ—Ç –Ω–∞–∫–æ–ø–ª–µ–Ω–Ω—ã–µ –Ω–æ–≤–æ—Å—Ç–∏ –≤ –∫—ç—à"""
    with open(NEWS_CACHE_FILE, "w", encoding="utf-8") as f:
        json.dump(news, f, indent=2, ensure_ascii=False)


def clear_news_cache():
    """–û—á–∏—â–∞–µ—Ç –∫—ç—à –Ω–æ–≤–æ—Å—Ç–µ–π –ø–æ—Å–ª–µ –ø—É–±–ª–∏–∫–∞—Ü–∏–∏"""
    if os.path.exists(NEWS_CACHE_FILE):
        os.remove(NEWS_CACHE_FILE)
    return []


# === –§—É–Ω–∫—Ü–∏—è –ø–æ–ª—É—á–µ–Ω–∏—è –∫—Ä–∞—Ç–∫–æ–≥–æ —Ä–µ–∑—é–º–µ –æ—Ç –ò–ò ===
def summarize_news(news_items):
    """–ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç –∫—Ä–∞—Ç–∫—É—é —Å–≤–æ–¥–∫—É –∏–∑ —Å–æ–±—Ä–∞–Ω–Ω—ã—Ö –Ω–æ–≤–æ—Å—Ç–µ–π"""
    if not news_items:
        return ""

    prompt = (
        "–°–æ–∑–¥–∞–π –∫—Ä–∞—Ç–∫–∏–π –¥–∞–π–¥–∂–µ—Å—Ç –Ω–æ–≤–æ—Å—Ç–µ–π –¥–ª—è Telegram-–∫–∞–Ω–∞–ª–∞ –≤ —Ñ–æ—Ä–º–∞—Ç–µ Markdown."
        "–°–≥—Ä—É–ø–ø–∏—Ä—É–π –Ω–æ–≤–æ—Å—Ç–∏ –ø–æ 3-5 —Ç–µ–º–∞–º. –î–ª—è –∫–∞–∂–¥–æ–π —Ç–µ–º—ã:\n\n"
        "1. **–ó–∞–≥–æ–ª–æ–≤–æ–∫**: 2-3 —ç–º–æ–¥–∑–∏ + –Ω–∞–∑–≤–∞–Ω–∏–µ —Ç–µ–º—ã (–∂–∏—Ä–Ω—ã–º)\n"
        "2. **–ù–æ–≤–æ—Å—Ç–∏**: 2-4 –ø—É–Ω–∫—Ç–∞ –≤ —Ñ–æ—Ä–º–∞—Ç–µ:\n"
        "   ‚Ä¢ –ö—Ä–∞—Ç–∫–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ [–∏—Å—Ç–æ—á–Ω–∏–∫](—Å—Å—ã–ª–∫–∞)\n\n"
        "     ```–∞–Ω–∞–ª–∏–∑ –Ω–æ–≤–æ—Å—Ç–∏```"
        "**–¢—Ä–µ–±–æ–≤–∞–Ω–∏—è:**\n"
        "‚Ä¢ –¢–æ–ª—å–∫–æ —Å–∞–º—ã–µ –≤–∞–∂–Ω—ã–µ –Ω–æ–≤–æ—Å—Ç–∏\n"
        "‚Ä¢ –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–æ –∫—Ä–∞—Ç–∫–∏–µ —Ñ–æ—Ä–º—É–ª–∏—Ä–æ–≤–∫–∏\n"
        "‚Ä¢ –°—Å—ã–ª–∫–∏ –≤ —Ñ–æ—Ä–º–∞—Ç–µ Markdown: [—Ç–µ–∫—Å—Ç](url)\n"
        "‚Ä¢ –†–∞–∑–¥–µ–ª–∏—Ç–µ–ª—å \n\n –º–µ–∂–¥—É —Ç–µ–º–∞–º–∏\n"
        "‚Ä¢ –ë–µ–∑ –Ω—É–º–µ—Ä–∞—Ü–∏–∏, –¥–∞—Ç –∏ –ª–∏—à–Ω–∏—Ö –¥–µ—Ç–∞–ª–µ–π\n\n"
        "**–ü—Ä–∏–º–µ—Ä —Ñ–æ—Ä–º–∞—Ç–∞:**\n"
        "**üöÄ –ö–æ—Å–º–æ—Å**\n"
        "‚Ä¢ –ü—Ä–æ–≥—Ä–µ—Å—Å –ú–°-32 –ø—Ä–∏—Å—Ç—ã–∫–æ–≤–∞–ª—Å—è –∫ –ú–ö–° [–†–æ—Å–∫–æ—Å–º–æ—Å](t.me/roscosmos_gk/18301)\n"
        "‚Ä¢ –û—Ç–∫—Ä—ã—Ç–∏–µ –ù–∞—Ü–∏–æ–Ω–∞–ª—å–Ω–æ–≥–æ –∫–æ—Å–º–∏—á–µ—Å–∫–æ–≥–æ —Ü–µ–Ω—Ç—Ä–∞ [FAKY](https://old.mipt.ru/dasr/)\n"
        "``` –ö–æ—Å–º–∏—á–µ—Å–∫–∏–π —Ü–µ–Ω—Ç—Ä - ...(–∫—Ä–∞—Ç–∫–∏–π –∞–Ω–∞–ª–∏–∑ –õ–ò–®–¨ –°–ê–ú–´–• –í–ê–ñ–ù–´–• –¥–ª—è —Å—Ç—É–¥–µ–Ω—Ç–æ–≤ –Ω–æ–≤–æ—Å—Ç–µ–π) ```"
        "\n\n"
        "**üéì –û–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ**\n"
        "‚Ä¢ –ù–æ–≤–∞—è –º–∞–≥–∏—Å—Ç—Ä–∞—Ç—É—Ä–∞ –ø–æ –±–∏–æ—Ç–µ—Ö–Ω–æ–ª–æ–≥–∏—è–º [–ú–§–¢–ò](t.me/miptru/8802)\n\n"
        "–ù–æ–≤–æ—Å—Ç–∏ –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏:\n"
    )

    for i, item in enumerate(news_items):
        prompt += f"{i + 1}. {item['text']} t.me/{item['channel_username'].replace('@', '')}/{item['message_id']}\n\n"

    try:
        completion = client_ai.chat.completions.create(
            model="google/gemini-2.0-flash-exp:free",
            messages=[
                {"role": "system",
                 "content": "–í—ã ‚Äî –æ–ø—ã—Ç–Ω—ã–π –∞–Ω–∞–ª–∏—Ç–∏–∫ –Ω–æ–≤–æ—Å—Ç–µ–π, –∫–æ—Ç–æ—Ä—ã–π –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω–æ –æ—Ç–±–∏—Ä–∞–µ—Ç —Å–∞–º—ã–µ –≤–∞–∂–Ω—ã–µ –Ω–æ–≤–æ—Å—Ç–∏ –∏ –≥—Ä—É–ø–ø–∏—Ä—É–µ—Ç –∏—Ö –ø–æ —Ç–µ–º–∞–º."},
                {"role": "user", "content": prompt}
            ],
            max_tokens=1024,
            temperature=0.1
        )
        return completion.choices[0].message.content
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ —Å–≤–æ–¥–∫–∏: {e}")
        return "–û—à–∏–±–∫–∞ –ø—Ä–∏ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ —Å–≤–æ–¥–∫–∏. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ."


# === –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤—Ä–µ–º–µ–Ω–∏ –¥–ª—è –ø—É–±–ª–∏–∫–∞—Ü–∏–∏ ===
def should_post_now():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç, –Ω—É–∂–Ω–æ –ª–∏ –ø—É–±–ª–∏–∫–æ–≤–∞—Ç—å —Å–≤–æ–¥–∫—É —Å–µ–π—á–∞—Å"""
    moscow_tz = pytz.timezone('Europe/Moscow')
    now = datetime.datetime.now(moscow_tz).strftime("%H:%M")
    return now in POSTING_TIMES


# === –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Å–±–æ—Ä–∞ –Ω–æ–≤–æ—Å—Ç–µ–π ===
def collect_news():
    """–°–æ–±–∏—Ä–∞–µ—Ç –Ω–æ–≤—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è –∏–∑ –æ—Ç—Å–ª–µ–∂–∏–≤–∞–µ–º—ã—Ö –∫–∞–Ω–∞–ª–æ–≤"""
    processed_ids = load_processed_ids()
    news_cache = load_news_cache()
    new_news_collected = False

    for username in channel_usernames:
        try:
            entity = client_tg.get_entity(username)
            messages = client_tg.get_messages(entity, limit=13)

            for msg in messages:
                if msg.id not in processed_ids and msg.text and msg.text.strip():
                    news_cache.append({
                        'text': msg.text,
                        'channel_username': username,
                        'message_id': msg.id,
                        'timestamp': datetime.datetime.now().isoformat()
                    })
                    processed_ids.add(msg.id)
                    new_news_collected = True
                    print(f"–ù–æ–≤–æ—Å—Ç—å –¥–æ–±–∞–≤–ª–µ–Ω–∞ –∏–∑ {username}")
        except Exception as e:
            print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö –∏–∑ {username}: {e}")

    if new_news_collected:
        save_news_cache(news_cache)
        save_processed_ids(processed_ids)

    return new_news_collected


# === –ü—É–±–ª–∏–∫–∞—Ü–∏—è —Å–≤–æ–¥–∫–∏ –∏ –æ—á–∏—Å—Ç–∫–∞ –∫—ç—à–∞ ===
def publish_summary():
    """–ü—É–±–ª–∏–∫—É–µ—Ç —Å–≤–æ–¥–∫—É –∏ –æ—á–∏—â–∞–µ—Ç –∫—ç—à"""
    news_cache = load_news_cache()
    if news_cache:
        print(f"–ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ —Å–≤–æ–¥–∫–∏ –∏–∑ {len(news_cache)} –Ω–æ–≤–æ—Å—Ç–µ–π...")
        summary = summarize_news(news_cache)
        now = datetime.datetime.now(pytz.timezone('Europe/Moscow')).strftime("%d.%m.%Y")
        header = f"#–ß–ï–¢–ê–ú_–û–¢ {now}\n\n"
        full_message = header + summary
        print(full_message)

        if summary:
            try:
                if os.path.exists(BACKING_IMAGE):
                    short_caption = full_message
                    client_tg.send_file(
                        TARGET_CHANNEL,
                        BACKING_IMAGE,
                        caption=short_caption,
                        link_preview=False
                    )
                    print(f"–ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Å –∑–∞–≥–æ–ª–æ–≤–∫–æ–º –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –≤ {TARGET_CHANNEL}")
                else:
                    client_tg.send_message(
                        TARGET_CHANNEL,
                        full_message,
                        link_preview=False
                    )
                    print(f"–°–≤–æ–¥–∫–∞ –±–µ–∑ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω–∞ –≤ {TARGET_CHANNEL} (—Ñ–∞–π–ª {BACKING_IMAGE} –Ω–µ –Ω–∞–π–¥–µ–Ω)")
                clear_news_cache()
                print("–ö—ç—à –Ω–æ–≤–æ—Å—Ç–µ–π –æ—á–∏—â–µ–Ω –ø–æ—Å–ª–µ –ø—É–±–ª–∏–∫–∞—Ü–∏–∏")
            except Exception as e:
                client_tg.send_message(
                    TARGET_CHANNEL,
                    full_message,
                    link_preview=False
                )
                print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—É–±–ª–∏–∫–∞—Ü–∏–∏ –≤ –∫–∞–Ω–∞–ª: {e}")
    else:
        print("–ù–µ—Ç –Ω–æ–≤–æ—Å—Ç–µ–π –¥–ª—è –ø—É–±–ª–∏–∫–∞—Ü–∏–∏")


# === –û—Å–Ω–æ–≤–Ω–æ–π —Ü–∏–∫–ª ===
def main():
    print("–ó–∞–ø—É—Å–∫ –Ω–æ–≤–æ—Å—Ç–Ω–æ–≥–æ –±–æ—Ç–∞...")
    print(f"–ë—É–¥–µ—Ç –ø—É–±–ª–∏–∫–æ–≤–∞—Ç—å —Å–≤–æ–¥–∫–∏ –≤: {', '.join(POSTING_TIMES)} –ø–æ –º–æ—Å–∫–æ–≤—Å–∫–æ–º—É –≤—Ä–µ–º–µ–Ω–∏")

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ —Ñ–∞–π–ª–∞ —Å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ–º
    if os.path.exists(BACKING_IMAGE):
        print(f"–ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ {BACKING_IMAGE} –±—É–¥–µ—Ç –ø—Ä–∏–∫—Ä–µ–ø–ª—è—Ç—å—Å—è –∫ –ø–æ—Å—Ç–∞–º")
    else:
        print(f"–í–Ω–∏–º–∞–Ω–∏–µ: —Ñ–∞–π–ª {BACKING_IMAGE} –Ω–µ –Ω–∞–π–¥–µ–Ω, –ø–æ—Å—Ç—ã –±—É–¥—É—Ç –ø—É–±–ª–∏–∫–æ–≤–∞—Ç—å—Å—è –±–µ–∑ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è")

    # –ó–∞–≥—Ä—É–∂–∞–µ–º —É–∂–µ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã–µ ID
    processed_ids = load_processed_ids()
    print(f"–ó–∞–≥—Ä—É–∂–µ–Ω–æ {len(processed_ids)} –æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π")

    collect_news()
    print(f"–í—Ä–µ–º—è –ø—É–±–ª–∏–∫–∞—Ü–∏–∏! ({datetime.datetime.now(pytz.timezone('Europe/Moscow')).strftime('%H:%M')})")
    publish_summary()


if __name__ == "__main__":
    main()
